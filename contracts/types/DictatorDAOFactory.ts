/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { DictatorDAO, DictatorDAOInterface } from "../DictatorDAO";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "sharesSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "sharesName",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOperator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CancelTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "QueueTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancelTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operatorVote",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOperatorTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "queueTransaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "queuedTransactions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userVote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lockedUntil",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operatorVote",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620029c1380380620029c183398101604081905262000034916200021e565b4660a08190526200004581620000b0565b6080525083516200005e90600090602087019062000106565b5082516200007490600190602086019062000106565b5060609190911b6001600160601b03191660c052600380546001600160a01b0319166001600160a01b0390921691909117905550620003d99050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188230604051602001620000e993929190620002d3565b604051602081830303815290604052805190602001209050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014957805160ff191683800117855562000179565b8280016001018555821562000179579182015b82811115620001795782518255916020019190600101906200015c565b50620001879291506200018b565b5090565b5b808211156200018757600081556001016200018c565b8051620001af81620003b4565b92915050565b8051620001af81620003ce565b600082601f830112620001d457600080fd5b8151620001eb620001e58262000330565b62000309565b915080825260208301602083018583830111156200020857600080fd5b6200021583828462000381565b50505092915050565b600080600080608085870312156200023557600080fd5b84516001600160401b038111156200024c57600080fd5b6200025a87828801620001c2565b94505060208501516001600160401b038111156200027757600080fd5b6200028587828801620001c2565b93505060406200029887828801620001b5565b9250506060620002ab87828801620001a2565b91505092959194509250565b620002c28162000358565b82525050565b620002c28162000365565b60608101620002e38286620002c8565b620002f26020830185620002c8565b620003016040830184620002b7565b949350505050565b6040518181016001600160401b03811182821017156200032857600080fd5b604052919050565b60006001600160401b038211156200034757600080fd5b506020601f91909101601f19160190565b6000620001af8262000375565b90565b6000620001af8262000358565b6001600160a01b031690565b60005b838110156200039e57818101518382015260200162000384565b83811115620003ae576000848401525b50505050565b620003bf8162000358565b8114620003cb57600080fd5b50565b620003bf8162000368565b60805160a05160c05160601c6125a46200041d60003980610b405280610d4c52806112f65280611708528061185c5250806115ea52508061161f52506125a46000f3fe6080604052600436106101cd5760003560e01c806395d89b41116100f7578063d505accf11610095578063ec60bcf311610064578063ec60bcf3146104f1578063f2b0653714610511578063f5ba1c8714610531578063fc0c546a14610551576101cd565b8063d505accf14610471578063d8bff5a514610491578063dd62ed3e146104b1578063e37c9fd5146104d1576101cd565b8063a9059cbb116100d1578063a9059cbb14610405578063ac7e534e14610425578063b3ab15fb1461043a578063c1a287e21461045c576101cd565b806395d89b41146103a25780639dc29fac146103b7578063a87430ba146103d7576101cd565b80634881636d1161016f57806370a082311161013e57806370a08231146103225780637ecebe001461034257806380b3b0991461036257806394bf804d14610382576101cd565b80634881636d146102b6578063570ca735146102cb57806369b41170146102ed5780636dd7d8ea14610302576101cd565b806323b872dd116101ab57806323b872dd1461024c578063313ce5671461026c5780633644e5151461028e5780633f579f42146102a3576101cd565b806306fdde03146101d2578063095ea7b3146101fd57806318160ddd1461022a575b600080fd5b3480156101de57600080fd5b506101e7610573565b6040516101f491906122e4565b60405180910390f35b34801561020957600080fd5b5061021d610218366004611bfa565b610600565b6040516101f49190612211565b34801561023657600080fd5b5061023f61066b565b6040516101f4919061221f565b34801561025857600080fd5b5061021d610267366004611b11565b610671565b34801561027857600080fd5b50610281610693565b6040516101f4919061246d565b34801561029a57600080fd5b5061023f610698565b6101e76102b1366004611c2a565b6106a7565b3480156102c257600080fd5b5061023f610881565b3480156102d757600080fd5b506102e0610887565b6040516101f4919061218a565b3480156102f957600080fd5b5061023f610896565b34801561030e57600080fd5b5061021d61031d366004611ab1565b61089d565b34801561032e57600080fd5b5061023f61033d366004611ab1565b61097c565b34801561034e57600080fd5b5061023f61035d366004611ab1565b6109a0565b34801561036e57600080fd5b5061023f61037d366004611c2a565b6109b2565b34801561038e57600080fd5b5061021d61039d366004611cdf565b610ab7565b3480156103ae57600080fd5b506101e7610e2a565b3480156103c357600080fd5b5061021d6103d2366004611bfa565b610e85565b3480156103e357600080fd5b506103f76103f2366004611ab1565b610e92565b6040516101f4929190612403565b34801561041157600080fd5b5061021d610420366004611bfa565b610eb8565b34801561043157600080fd5b506102e0610ec5565b34801561044657600080fd5b5061045a610455366004611ab1565b610ed4565b005b34801561046857600080fd5b5061023f611026565b34801561047d57600080fd5b5061045a61048c366004611b5e565b61102d565b34801561049d57600080fd5b5061023f6104ac366004611ab1565b6111ce565b3480156104bd57600080fd5b5061023f6104cc366004611ad7565b6111e0565b3480156104dd57600080fd5b5061045a6104ec366004611c2a565b6111fd565b3480156104fd57600080fd5b5061021d61050c366004611b11565b6112b0565b34801561051d57600080fd5b5061023f61052c366004611ca3565b6112c7565b34801561053d57600080fd5b506102e061054c366004611ab1565b6112d9565b34801561055d57600080fd5b506105666112f4565b6040516101f491906122f5565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b505050505081565b3360008181526007602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061065990869061221f565b60405180910390a35060015b92915050565b60025481565b600061067d8483611318565b6106888484846113a9565b5060015b9392505050565b601281565b60006106a26115e5565b905090565b6003546060906001600160a01b031633146106dd5760405162461bcd60e51b81526004016106d4906123b3565b60405180910390fd5b600280546003546001600160a01b03166000908152600560205260409020549091021161071c5760405162461bcd60e51b81526004016106d490612313565b6000848484604051602001610733939291906121db565b60408051601f1981840301815291815281516020928301206000818152600b9093529120549091504281111561077b5760405162461bcd60e51b81526004016106d490612393565b6212750081014211156107a05760405162461bcd60e51b81526004016106d490612373565b6000828152600b6020526040808220829055516060906001600160a01b0389169088906107ce90899061214b565b60006040518083038185875af1925050503d806000811461080b576040519150601f19603f3d011682016040523d82523d6000602084013e610810565b606091505b5091509150816108325760405162461bcd60e51b81526004016106d4906123a3565b876001600160a01b0316847f71f2f703ef5605f99bb79556066217af28b9d991b829c9f4255e1abdf873fb4a898960405161086e92919061241e565b60405180910390a3979650505050505050565b600a5481565b6003546001600160a01b031681565b6202a30081565b336000908152600460205260408120546001600160a01b039081169083168114610973576108c9611a0f565b50336000908152600660209081526040918290208251808401909352546001600160801b03808216808552600160801b9092041691830191909152156109495780516001600160a01b0380841660009081526005602052604080822080546001600160801b03958616900390558451928816825290208054919092160190555b5033600090815260046020526040902080546001600160a01b0319166001600160a01b0385161790555b50600192915050565b6001600160a01b03166000908152600660205260409020546001600160801b031690565b60086020526000908152604090205481565b6003546000906001600160a01b031633146109df5760405162461bcd60e51b81526004016106d4906123b3565b600280546003546001600160a01b031660009081526005602052604090205490910211610a1e5760405162461bcd60e51b81526004016106d490612313565b6000848484604051602001610a35939291906121db565b60408051601f1981840301815282825280516020918201206000818152600b909252919020426202a3000190819055909250906001600160a01b0387169083907f9ffdf0c63c8eec344b500e806ac1d1d37308fdf141a29d10cdd82c069aec6e4890610aa69089908990879061243e565b60405180910390a350949350505050565b600033610ad65760405162461bcd60e51b81526004016106d490612363565b610ade611a0f565b503360009081526006602090815260408083208151808301835290546001600160801b038082168352600160801b9091041692810192909252517f70a082310000000000000000000000000000000000000000000000000000000081529091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190610b7d90309060040161218a565b60206040518083038186803b158015610b9557600080fd5b505afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd9190611cc1565b90506000600254600014610bee5781600254870281610be857fe5b04610bf0565b855b336000908152600460205260409020549091506001600160a01b0390811690829087168214610c825784516001600160801b031615610c595784516001600160a01b038316600090815260056020526040902080546001600160801b0392831690039055855116015b33600090815260046020526040902080546001600160a01b0319166001600160a01b0389161790555b6001600160a01b0387166000908152600560205260409020805482019055610ca983611645565b8551016001600160801b03168552610cc5426201518001611645565b6001600160801b03908116602080880191825233600081815260069092526040918290208951815494518616600160801b029086166fffffffffffffffffffffffffffffffff199095169490941790941692909217909255600280548601905590517f23b872dd0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91610d8c919030908d90600401612198565b602060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190611c85565b5060405133906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e1490879061221f565b60405180910390a3506001979650505050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f85780601f106105cd576101008083540402835291602001916105f8565b6000610973338484611672565b6006602052600090815260409020546001600160801b0380821691600160801b90041682565b60006109733384846113a9565b6009546001600160a01b031681565b6001600160a01b038116610efa5760405162461bcd60e51b81526004016106d490612343565b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc54600254600954919003906001600160a01b03838116911614610fa4576001600160a01b0382166000908152600560205260409020546002028110610f7b5760405162461bcd60e51b81526004016106d490612313565b600980546001600160a01b0319166001600160a01b0384161790554262093a8001600a55611022565b6001600160a01b03821660009081526005602052604090205460020281101561100c57600a54421015610fe95760405162461bcd60e51b81526004016106d4906123f3565b600954600380546001600160a01b0319166001600160a01b039092169190911790555b600980546001600160a01b03191690556000600a555b5050565b6212750081565b6001600160a01b0387166110535760405162461bcd60e51b81526004016106d4906123d3565b8342106110725760405162461bcd60e51b81526004016106d4906123e3565b6001600160a01b03871660008181526008602090815260409182902080546001818101909255925190926110f0926110d5927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e92918e910161222d565b60405160208183030381529060405280519060200120611939565b8585856040516000815260200160405260405161111094939291906122af565b6020604051602081039080840390855afa158015611132573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146111625760405162461bcd60e51b81526004016106d4906123c3565b6001600160a01b038088166000818152600760209081526040808320948b168084529490915290819020889055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906111bd90899061221f565b60405180910390a350505050505050565b60056020526000908152604090205481565b600760209081526000928352604080842090915290825290205481565b6003546001600160a01b031633146112275760405162461bcd60e51b81526004016106d4906123b3565b600083838360405160200161123e939291906121db565b60408051601f1981840301815282825280516020918201206000818152600b9092529181205591506001600160a01b0385169082907f7666fc3824e27fff7f62adc190adf39d59915b1634803f46f6002f5a071de7f7906112a2908790879061241e565b60405180910390a350505050565b60006112bc8483611318565b610688848484611672565b600b6020526000908152604090205481565b6004602052600090815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b038316141561132e57611022565b6001600160a01b038216600090815260076020908152604080832033845290915290205460001981146113a4578181101561137b5760405162461bcd60e51b81526004016106d490612333565b6001600160a01b0383166000908152600760209081526040808320338452909152902082820390555b505050565b6113b1611a0f565b506001600160a01b0383166000908152600660209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082018190524210156114125760405162461bcd60e51b81526004016106d490612323565b81156115a25780516001600160801b03168211156114425760405162461bcd60e51b81526004016106d490612353565b826001600160a01b0316846001600160a01b0316146115a2576001600160a01b0383166114815760405162461bcd60e51b81526004016106d490612363565b611489611a0f565b506001600160a01b0380841660008181526006602090815260408083208151808301835290546001600160801b038082168352600160801b90910416818401529383526004909152808220548885168352912054919290811691166114ed85611645565b84516001600160a01b038916600090815260066020526040902080546fffffffffffffffffffffffffffffffff1916929091036001600160801b031691909117905561153885611645565b92516001600160a01b03878116600090815260066020908152604080832080546fffffffffffffffffffffffffffffffff1916959098016001600160801b031694909417909655928116835260059094528082208054879003905591909216825290208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112a2919061221f565b6000467f0000000000000000000000000000000000000000000000000000000000000000811461161d57611618816119a9565b61163f565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b60006001600160801b0382111561166e5760405162461bcd60e51b81526004016106d490612383565b5090565b6001600160a01b0382166116985760405162461bcd60e51b81526004016106d490612363565b6116a0611a0f565b506001600160a01b0383166000908152600660209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082018190524210156117015760405162461bcd60e51b81526004016106d490612323565b60006002547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611752919061218a565b60206040518083038186803b15801561176a57600080fd5b505afa15801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a29190611cc1565b8402816117ab57fe5b0490506117cb6117ba84611645565b83516001600160801b0316906119e0565b6001600160a01b03868116600090815260066020908152604080832080546fffffffffffffffffffffffffffffffff19166001600160801b039690961695909517909455600280548890039055600480825284832054841683526005909152908390208054879003905591517fa9059cbb0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009091169163a9059cbb916118939188918691016121c0565b602060405180830381600087803b1580156118ad57600080fd5b505af11580156118c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e59190611c85565b5060006001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161192a919061221f565b60405180910390a35050505050565b60006040518060400160405280600281526020017f19010000000000000000000000000000000000000000000000000000000000008152506119796115e5565b8360405160200161198c93929190612157565b604051602081830303815290604052805190602001209050919050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218823060405160200161198c93929190612287565b8082036001600160801b0380841690821611156106655760405162461bcd60e51b81526004016106d490612303565b604080518082019091526000808252602082015290565b803561066581612565565b80516106658161257c565b803561066581612585565b600082601f830112611a5857600080fd5b8135611a6b611a66826124a2565b61247b565b91508082526020830160208301858383011115611a8757600080fd5b611a9283828461251f565b50505092915050565b805161066581612585565b80356106658161258e565b600060208284031215611ac357600080fd5b6000611acf8484611a26565b949350505050565b60008060408385031215611aea57600080fd5b6000611af68585611a26565b9250506020611b0785828601611a26565b9150509250929050565b600080600060608486031215611b2657600080fd5b6000611b328686611a26565b9350506020611b4386828701611a26565b9250506040611b5486828701611a3c565b9150509250925092565b600080600080600080600060e0888a031215611b7957600080fd5b6000611b858a8a611a26565b9750506020611b968a828b01611a26565b9650506040611ba78a828b01611a3c565b9550506060611bb88a828b01611a3c565b9450506080611bc98a828b01611aa6565b93505060a0611bda8a828b01611a3c565b92505060c0611beb8a828b01611a3c565b91505092959891949750929550565b60008060408385031215611c0d57600080fd5b6000611c198585611a26565b9250506020611b0785828601611a3c565b600080600060608486031215611c3f57600080fd5b6000611c4b8686611a26565b9350506020611c5c86828701611a3c565b925050604084013567ffffffffffffffff811115611c7957600080fd5b611b5486828701611a47565b600060208284031215611c9757600080fd5b6000611acf8484611a31565b600060208284031215611cb557600080fd5b6000611acf8484611a3c565b600060208284031215611cd357600080fd5b6000611acf8484611a9b565b60008060408385031215611cf257600080fd5b6000611af68585611a3c565b611d078161250d565b82525050565b611d07816124dc565b611d07816124e7565b611d07816124ec565b611d07611d34826124ec565b6124ec565b6000611d44826124ca565b611d4e81856124ce565b9350611d5e81856020860161252b565b611d678161255b565b9093019392505050565b6000611d7c826124ca565b611d8681856124d7565b9350611d9681856020860161252b565b9290920192915050565b611d0781612514565b6000611db66015836124ce565b7f426f72696e674d6174683a20556e646572666c6f770000000000000000000000815260200192915050565b6000611def6010836124ce565b7f4e6f7420656e6f75676820766f74657300000000000000000000000000000000815260200192915050565b6000611e286006836124ce565b7f4c6f636b65640000000000000000000000000000000000000000000000000000815260200192915050565b6000611e61600d836124ce565b7f4c6f7720616c6c6f77616e636500000000000000000000000000000000000000815260200192915050565b6000611e9a600d836124ce565b7f5a65726f206f70657261746f7200000000000000000000000000000000000000815260200192915050565b6000611ed3600b836124ce565b7f4c6f772062616c616e6365000000000000000000000000000000000000000000815260200192915050565b6000611f0c600c836124ce565b7f5a65726f20616464726573730000000000000000000000000000000000000000815260200192915050565b6000611f456008836124ce565b7f5478207374616c65000000000000000000000000000000000000000000000000815260200192915050565b6000611f7e601c836124ce565b7f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000815260200192915050565b6000611fb76009836124ce565b7f546f6f206561726c790000000000000000000000000000000000000000000000815260200192915050565b6000611ff0600e836124ce565b7f5478207265766572746564203a28000000000000000000000000000000000000815260200192915050565b6000612029600d836124ce565b7f4f70657261746f72206f6e6c7900000000000000000000000000000000000000815260200192915050565b6000612062600b836124ce565b7f496e76616c696420536967000000000000000000000000000000000000000000815260200192915050565b600061209b600a836124ce565b7f5a65726f206f776e657200000000000000000000000000000000000000000000815260200192915050565b60006120d46007836124ce565b7f4578706972656400000000000000000000000000000000000000000000000000815260200192915050565b600061210d600b836124ce565b7f57616974206c6f6e676572000000000000000000000000000000000000000000815260200192915050565b611d07816124ef565b611d0781612507565b600061068c8284611d71565b60006121638286611d71565b915061216f8285611d28565b60208201915061217f8284611d28565b506020019392505050565b602081016106658284611d0d565b606081016121a68286611cfe565b6121b36020830185611d0d565b611acf6040830184611d1f565b604081016121ce8285611d0d565b61068c6020830184611d1f565b606081016121e98286611d0d565b6121f66020830185611d1f565b81810360408301526122088184611d39565b95945050505050565b602081016106658284611d16565b602081016106658284611d1f565b60c0810161223b8289611d1f565b6122486020830188611d0d565b6122556040830187611d0d565b6122626060830186611d1f565b61226f6080830185611d1f565b61227c60a0830184611d1f565b979650505050505050565b606081016122958286611d1f565b6122a26020830185611d1f565b611acf6040830184611d0d565b608081016122bd8287611d1f565b6122ca6020830186612142565b6122d76040830185611d1f565b6122086060830184611d1f565b6020808252810161068c8184611d39565b602081016106658284611da0565b6020808252810161066581611da9565b6020808252810161066581611de2565b6020808252810161066581611e1b565b6020808252810161066581611e54565b6020808252810161066581611e8d565b6020808252810161066581611ec6565b6020808252810161066581611eff565b6020808252810161066581611f38565b6020808252810161066581611f71565b6020808252810161066581611faa565b6020808252810161066581611fe3565b602080825281016106658161201c565b6020808252810161066581612055565b602080825281016106658161208e565b60208082528101610665816120c7565b6020808252810161066581612100565b604081016124118285612139565b61068c6020830184612139565b6040810161242c8285611d1f565b8181036020830152611acf8184611d39565b6060810161244c8286611d1f565b818103602083015261245e8185611d39565b9050611acf6040830184611d1f565b602081016106658284612142565b60405181810167ffffffffffffffff8111828210171561249a57600080fd5b604052919050565b600067ffffffffffffffff8211156124b957600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b919050565b6000610665826124fb565b151590565b90565b6001600160801b031690565b6001600160a01b031690565b60ff1690565b6000610665825b6000610665826124dc565b82818337506000910152565b60005b8381101561254657818101518382015260200161252e565b83811115612555576000848401525b50505050565b601f01601f191690565b61256e816124dc565b811461257957600080fd5b50565b61256e816124e7565b61256e816124ec565b61256e8161250756fea164736f6c634300060c000a";

type DictatorDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DictatorDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DictatorDAO__factory extends ContractFactory {
  constructor(...args: DictatorDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    sharesSymbol: PromiseOrValue<string>,
    sharesName: PromiseOrValue<string>,
    token_: PromiseOrValue<string>,
    initialOperator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DictatorDAO> {
    return super.deploy(
      sharesSymbol,
      sharesName,
      token_,
      initialOperator,
      overrides || {}
    ) as Promise<DictatorDAO>;
  }
  override getDeployTransaction(
    sharesSymbol: PromiseOrValue<string>,
    sharesName: PromiseOrValue<string>,
    token_: PromiseOrValue<string>,
    initialOperator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sharesSymbol,
      sharesName,
      token_,
      initialOperator,
      overrides || {}
    );
  }
  override attach(address: string): DictatorDAO {
    return super.attach(address) as DictatorDAO;
  }
  override connect(signer: Signer): DictatorDAO__factory {
    return super.connect(signer) as DictatorDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DictatorDAOInterface {
    return new utils.Interface(_abi) as DictatorDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DictatorDAO {
    return new Contract(address, _abi, signerOrProvider) as DictatorDAO;
  }
}
